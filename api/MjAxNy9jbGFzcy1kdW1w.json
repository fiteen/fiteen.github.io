{"title":"iOS 逆向分析之 class-dump","date":"2017-10-04T16:13:05.000Z","date_formatted":{"ll":"Oct 5, 2017","L":"10/05/2017","MM-DD":"10-05"},"link":"2017/class-dump","comments":true,"tags":["class-dump","dumpdecrypted","iOS 逆向"],"categories":["iOS"],"updated":"2022-09-02T06:38:13.687Z","content":"<h2 id=\"class-dump\">class-dump<a title=\"#class-dump\" href=\"#class-dump\"></a></h2>\n<p>class-dump 是一个命令行工具，通过利用 Objective-C 语言的 runtime 特性，提取存储在 Mach-O 文件中的类文件、协议、分类等信息，并统一表现在 .h 头文件中。</p>\n<span id=\"more\"></span>\n<h3 id=\"安装\">安装<a title=\"#安装\" href=\"#安装\"></a></h3>\n<p>1、下载 <a href=\"http://stevenygard.com/download/class-dump-3.5.dmg\" target=\"_blank\">class-dump-3.5.dmg</a>（若链接无效，请戳<a href=\"!http://stevenygard.com/projects/class-dump/\">官方网址</a>）</p>\n<p>2、打开终端，输入</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">open /usr/local/bin</span><br></pre></td></tr></table></figure>\n<p>3、将下载拿到的 class-dump 拷贝到 <code>/usr/local/bin</code> 目录下</p>\n<p>4、赋予其可执行权限，终端输入：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo <span class=\"built_in\">chmod</span> 777 /usr/local/bin/class-dump</span><br></pre></td></tr></table></figure>\n<p>5、至此安装成功，并可以通过 <code>class-dump --help</code> 查看用法和版本</p>\n<h3 id=\"使用\">使用<a title=\"#使用\" href=\"#使用\"></a></h3>\n<p>1、下载一个 ipa 文件，先将文件改为 zip 格式，解压后得到 .app 的目标文件</p>\n<p>2、终端输入命令，格式为 <code>class-dump -H $&#123;.app文件路径&#125; -o $&#123;输出文件夹路径&#125;</code></p>\n<p>3、假如此时输出的文件中未得到目标的 .h，结果中什么都没有或者只有一个 <code>CDStructures.h</code>，说明需要砸壳</p>\n<h2 id=\"dumpdecrypted\">dumpdecrypted<a title=\"#dumpdecrypted\" href=\"#dumpdecrypted\"></a></h2>\n<p>从 AppStore 下载安装的 App 被苹果默认加了一层壳，需要通过砸壳进行逆向分析。</p>\n<h3 id=\"工具\">工具<a title=\"#工具\" href=\"#工具\"></a></h3>\n<ul>\n<li>\n<p><a href=\"https://github.com/stefanesser/dumpdecrypted\" target=\"_blank\">dumpdecrypted.dylib</a></p>\n<ul>\n<li>\n<p><a href=\"https://github.com/stefanesser/dumpdecrypted/archive/master.zip\" target=\"_blank\">下载</a></p>\n</li>\n<li>\n<p>编译安装</p>\n<p>1、在终端进入下载的解压文件的目录：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> <span class=\"variable\">$&#123;filePath&#125;</span></span><br></pre></td></tr></table></figure>\n<p>2、执行 <code>ls</code> 里面存在三个文件：Makefile、README、dumpdecrypted.c</p>\n<p>3、执行 <code>make</code> ，在当前目录下会多出 dumpdecrypted.dylib 和 dumpdecrypted.o，前者就是我们需要的工具</p>\n</li>\n</ul>\n</li>\n<li>\n<p>一台越狱手机</p>\n</li>\n</ul>\n<h3 id=\"操作步骤\">操作步骤<a title=\"#操作步骤\" href=\"#操作步骤\"></a></h3>\n<p>使用越狱手机前往 AppStore 下载目标 App 并打开。</p>\n<h4 id=\"1.-使用-ssh-连接手机\">1. 使用 ssh 连接手机<a title=\"#1.-使用-ssh-连接手机\" href=\"#1.-使用-ssh-连接手机\"></a></h4>\n<p>1.1 越狱手机和电脑连同一个 wifi，查看手机所处当前网络的 IP 地址，打开终端 A，输入指令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh root@<span class=\"variable\">$&#123;手机当前网络的 IP 地址&#125;</span></span><br></pre></td></tr></table></figure>\n<p>1.2 通过命令<code>ps -e</code>找到目标 App 对应的进程，如果该 App 为当前打开的应用，可以关注最下面的几条进程，形如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$&#123;进程号&#125;</span> ??         <span class=\"variable\">$&#123;时间&#125;</span> <span class=\"variable\">$&#123;目标 App 在手机中的路径&#125;</span></span><br></pre></td></tr></table></figure>\n<p>路径形如</p>\n<p><code>/var/mobile/Containers/Bundle/Application/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/xx.app/xx </code></p>\n<p>将其记录下来备用。</p>\n<p>1.3 附加进程指令：<code>cycript -p $&#123;进程号&#125;</code></p>\n<p>获取 App 在沙盒 Documents 的路径：</p>\n<figure class=\"highlight objc\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[[<span class=\"built_in\">NSFileManager</span> defaultManager] URLsForDirectory:<span class=\"built_in\">NSDocumentDirectory</span> inDomains:<span class=\"built_in\">NSUserDomainMask</span>]</span><br></pre></td></tr></table></figure>\n<p>路径形如：<code>/var/mobile/Containers/Data/Application/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/Documents</code></p>\n<p>将其记录下来备用。</p>\n<h4 id=\"2.-注入-dumpdecrypted.dylib\">2. 注入 dumpdecrypted.dylib<a title=\"#2.-注入-dumpdecrypted.dylib\" href=\"#2.-注入-dumpdecrypted.dylib\"></a></h4>\n<p>2.1 新开终端 B（可使用快捷键 command + T）</p>\n<p>2.2 使用 scp 指令将 dumpdecrypted.dylib 拷贝到目标 App 的 Documents 目录下。</p>\n<p>指令为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp <span class=\"variable\">$&#123;dumpdecrypted.dylib 所在的完整路径&#125;</span> root@<span class=\"variable\">$&#123;手机当前网络的 IP 地址&#125;</span>:<span class=\"variable\">$&#123;目标 App 在手机中路径&#125;</span></span><br></pre></td></tr></table></figure>\n<p>终端会提示输入密码，默认为 <code> alpine</code>。</p>\n<h4 id=\"3.-砸壳\">3. 砸壳<a title=\"#3.-砸壳\" href=\"#3.-砸壳\"></a></h4>\n<p>3.1 回到终端 A，<code>cd</code>  进入步骤 1.3 中 App 在沙盒 Documents 的路径</p>\n<p>3.2 执行如下指令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DYLD_INSERT_LIBRARIES=dumpdecrypted.dylib <span class=\"variable\">$&#123;步骤 1.2 中目标 App 在手机中路径&#125;</span></span><br></pre></td></tr></table></figure>\n<p>3.3 执行 <code>ls</code> 指令查看当前目录下是否有 <code>.decrypted</code> 的文件来确定砸壳是否成功</p>\n<h4 id=\"4.-class-dump-导出-app-头文件\">4. class-dump 导出 App 头文件<a title=\"#4.-class-dump-导出-app-头文件\" href=\"#4.-class-dump-导出-app-头文件\"></a></h4>\n<p>4.1 回到终端 B，将.decrypted 文件拷贝到电脑目录下，指令为：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp root@<span class=\"variable\">$&#123;手机当前网络的 IP 地址&#125;</span>:<span class=\"variable\">$&#123;步骤 1.3 中App 在沙盒 Documents 的路径&#125;</span>/WeChat.decrypted <span class=\"variable\">$&#123;自定义的电脑目录&#125;</span></span><br></pre></td></tr></table></figure>\n<p>终端会提示输入密码，默认为 <code> alpine</code>。</p>\n<p>4.2 通过如下指令获取目标 App 的所有头文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class-dump -s -S -H --<span class=\"built_in\">arch</span> <span class=\"variable\">$&#123;指令集&#125;</span> <span class=\"variable\">$&#123;步骤 4.1 中的.decrypted 文件路径&#125;</span> -o <span class=\"variable\">$&#123;自定义的输出目录&#125;</span></span><br></pre></td></tr></table></figure>\n<p>指令集需对应当前越狱手机的型号，参考下表：</p>\n<ul>\n<li>armv6：iPhone | iPhone2 | iPhone3G</li>\n<li>armv7：iPhone3GS | iPhone4 | iPhone4S</li>\n<li>armv7s：iPhone5 | iPhone5C</li>\n<li>arm64：iPhone5S | iPhone6 | iPhone6Plus | iPhone6S  | iPhone6SPlus | iPhone7 | iPhone7Plus | iPhone8 | iPhone8Plus | iPhoneX</li>\n</ul>\n","prev":{"title":"『2017』去年今日此门中","link":"2017/annual-summary-2017"},"next":{"title":"iOS 自动布局进阶之巧用 IBInspectable 和 IB_DESIGNABLE","link":"2017/how-to-use-ib-inspectable-and-ib-designable"},"plink":"https://blog.fiteen.top/2017/class-dump/","toc":[{"id":"class-dump","title":"class-dump","index":"1"},{"id":"dumpdecrypted","title":"dumpdecrypted","index":"2"}],"reward":true,"copyright":{"author":"FiTeen","link":"<a href=\"https://blog.fiteen.top/2017/class-dump/\" title=\"iOS 逆向分析之 class-dump\">https://blog.fiteen.top/2017/class-dump/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}