{"title":"0028. Implement strStr()","date":"2022-09-02T06:38:13.810Z","date_formatted":{"ll":"Sep 2, 2022","L":"09/02/2022","MM-DD":"09-02"},"updated":"2022-09-02T06:38:13.810Z","content":"<p>English ｜ <a href=\"leetcode/0028\">简体中文</a></p>\n<h2 id=\"q\">Q<a title=\"#q\" href=\"#q\"></a></h2>\n<p>Implement <a href=\"http://www.cplusplus.com/reference/cstring/strstr/%5D\" target=\"_blank\">strStr()</a>.</p>\n<p>Return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.</p>\n<p><strong>Example 1:</strong></p>\n<blockquote>\n<p><strong>Input:</strong> haystack = “hello”, needle = “ll”<br>\n<strong>Output:</strong> 2</p>\n</blockquote>\n<p><strong>Example 2:</strong></p>\n<blockquote>\n<p><strong>Input:</strong> haystack = “aaaaa”, needle = “bba”<br>\n<strong>Output:</strong> -1</p>\n</blockquote>\n<p><strong>Clarification:</strong></p>\n<p>What should we return when <code>needle</code> is an empty string? This is a great question to ask during an interview.</p>\n<p>For the purpose of this problem, we will return 0 when <code>needle</code> is an empty string. This is consistent to C’s <a href=\"http://www.cplusplus.com/reference/cstring/strstr/\" target=\"_blank\">strstr()</a> and Java’s <a href=\"https://docs.oracle.com/javase/7/docs/api/java/lang/String.html#indexOf(java.lang.String)\" target=\"_blank\">indexOf()</a>.</p>\n<h2 id=\"a\">A<a title=\"#a\" href=\"#a\"></a></h2>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">func</span> <span class=\"title function_\">strStr</span>(<span class=\"keyword\">_</span> <span class=\"params\">haystack</span>: <span class=\"type\">String</span>, <span class=\"keyword\">_</span> <span class=\"params\">needle</span>: <span class=\"type\">String</span>) -&gt; <span class=\"type\">Int</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> nCount <span class=\"operator\">=</span> needle.count</span><br><span class=\"line\">        <span class=\"keyword\">if</span> nCount <span class=\"operator\">==</span> <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> haystackArr <span class=\"operator\">=</span> <span class=\"type\">Array</span>(haystack), hCount <span class=\"operator\">=</span> haystack.count</span><br><span class=\"line\">        <span class=\"keyword\">let</span> needleArr <span class=\"operator\">=</span> <span class=\"type\">Array</span>(needle)</span><br><span class=\"line\">        <span class=\"keyword\">var</span> i <span class=\"operator\">=</span> <span class=\"number\">0</span>, j <span class=\"operator\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> j <span class=\"operator\">&lt;</span> nCount <span class=\"operator\">&amp;&amp;</span> i <span class=\"operator\">+</span> j <span class=\"operator\">&lt;</span> hCount &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> haystackArr[i <span class=\"operator\">+</span> j] <span class=\"operator\">==</span> needleArr[j] &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>  j <span class=\"operator\">==</span> nCount <span class=\"operator\">-</span> <span class=\"number\">1</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> i</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    j <span class=\"operator\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                j <span class=\"operator\">=</span> <span class=\"number\">0</span></span><br><span class=\"line\">                i <span class=\"operator\">+=</span> <span class=\"number\">1</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"operator\">-</span><span class=\"number\">1</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","link":"leetcode/0028-en","comments":true,"plink":"https://blog.fiteen.top/leetcode/0028-en/","toc":[{"id":"q","title":"Q","index":"1"},{"id":"a","title":"A","index":"2"}],"reward":true,"copyright":{"author":"FiTeen","link":"<a href=\"https://blog.fiteen.top/leetcode/0028-en/\" title=\"0028. Implement strStr()\">https://blog.fiteen.top/leetcode/0028-en/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}