{"title":"0010. 正则表达式匹配","date":"2022-09-02T06:38:13.808Z","date_formatted":{"ll":"Sep 2, 2022","L":"09/02/2022","MM-DD":"09-02"},"updated":"2022-09-02T06:38:13.808Z","content":"<p><a href=\"leetcode/0010-en\">English</a>｜ 简体中文</p>\n<h2 id=\"题目描述\">题目描述<a title=\"#题目描述\" href=\"#题目描述\"></a></h2>\n<p>给你一个字符串 <code>s</code> 和一个字符规律 <code>p</code>，请你来实现一个支持 <code>'.'</code> 和 <code>'*'</code> 的正则表达式匹配。</p>\n<blockquote>\n<p>‘.’ 匹配任意单个字符<br>\n‘*’ 匹配零个或多个前面的那一个元素<br>\n所谓匹配，是要涵盖 <strong>整个</strong> 字符串 <code>s</code> 的，而不是部分字符串。</p>\n</blockquote>\n<p><strong>说明：</strong></p>\n<ul>\n<li><code>s</code> 可能为空，且只包含从 <code>a-z</code> 的小写字母。</li>\n<li><code>p</code> 可能为空，且只包含从 <code>a-z</code> 的小写字母，以及字符 <code>.</code> 和 <code>*</code>。</li>\n</ul>\n<p><strong>示例 1：</strong></p>\n<blockquote>\n<p><strong>输入：</strong><br>\ns = “aa”<br>\np = “a”<br>\n**输出：**false<br>\n<strong>解释：</strong>“a” 无法匹配 “aa” 整个字符串。</p>\n</blockquote>\n<p><strong>示例 2：</strong></p>\n<blockquote>\n<p><strong>输入：</strong><br>\ns = “aa”<br>\np = “a*”<br>\n**输出：**true<br>\n<strong>解释：</strong> 因为 ‘*’ 代表可以匹配零个或多个前面的那一个元素, 在这里前面的元素就是 ‘a’。因此，字符串 “aa” 可被视为 ‘a’ 重复了一次。</p>\n</blockquote>\n<p><strong>示例 3：</strong></p>\n<blockquote>\n<p><strong>输入：</strong><br>\ns = “ab”<br>\np = “.*”<br>\n**输出：**true<br>\n<strong>解释：</strong>“.*” 表示可匹配零个或多个（‘*’）任意字符（‘.’）。</p>\n</blockquote>\n<p><strong>示例 4：</strong></p>\n<blockquote>\n<p><strong>输入：</strong><br>\ns = “aab”<br>\np = “c<em>a</em>b”<br>\n**输出：**true<br>\n**解释：**因为 ‘*’ 表示零个或多个，这里 ‘c’ 为 0 个, ‘a’ 被重复一次。因此可以匹配字符串 “aab”。</p>\n</blockquote>\n<p><strong>示例 5：</strong></p>\n<blockquote>\n<p><strong>输入：</strong><br>\ns = “mississippi”<br>\np = “mis*is*p*.”<br>\n**输出：**false</p>\n</blockquote>\n<h2 id=\"题解\">题解<a title=\"#题解\" href=\"#题解\"></a></h2>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">func</span> <span class=\"title function_\">isMatch</span>(<span class=\"keyword\">_</span> <span class=\"params\">s</span>: <span class=\"type\">String</span>, <span class=\"keyword\">_</span> <span class=\"params\">p</span>: <span class=\"type\">String</span>) -&gt; <span class=\"type\">Bool</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> p.isEmpty &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> s.isEmpty</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> sArr <span class=\"operator\">=</span> <span class=\"type\">Array</span>(s), pArr <span class=\"operator\">=</span> <span class=\"type\">Array</span>(p)</span><br><span class=\"line\">        <span class=\"keyword\">let</span> isFirstMatch : <span class=\"type\">Bool</span> <span class=\"operator\">=</span> (<span class=\"operator\">!</span>s.isEmpty) <span class=\"operator\">&amp;&amp;</span> (pArr[<span class=\"number\">0</span>] <span class=\"operator\">==</span> sArr[<span class=\"number\">0</span>] <span class=\"operator\">||</span> pArr[<span class=\"number\">0</span>] <span class=\"operator\">==</span> <span class=\"string\">&quot;.&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (pArr.count <span class=\"operator\">&gt;=</span> <span class=\"number\">2</span> <span class=\"operator\">&amp;&amp;</span> pArr[<span class=\"number\">1</span>] <span class=\"operator\">==</span> <span class=\"string\">&quot;*&quot;</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> isFirstMatch <span class=\"operator\">&amp;&amp;</span> isMatch(<span class=\"type\">String</span>(s.suffix(s.count <span class=\"operator\">-</span> <span class=\"number\">1</span>)), p) <span class=\"operator\">||</span> isMatch(s, <span class=\"type\">String</span>(p.suffix(p.count <span class=\"operator\">-</span> <span class=\"number\">2</span>)))</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> isFirstMatch <span class=\"operator\">&amp;&amp;</span> isMatch(<span class=\"type\">String</span>(s.suffix(s.count <span class=\"operator\">-</span> <span class=\"number\">1</span>)), <span class=\"type\">String</span>(p.suffix(p.count <span class=\"operator\">-</span> <span class=\"number\">1</span>)))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","link":"leetcode/0010","comments":true,"plink":"https://blog.fiteen.top/leetcode/0010/","toc":[{"id":"题目描述","title":"题目描述","index":"1"},{"id":"题解","title":"题解","index":"2"}],"reward":true,"copyright":{"author":"FiTeen","link":"<a href=\"https://blog.fiteen.top/leetcode/0010/\" title=\"0010. 正则表达式匹配\">https://blog.fiteen.top/leetcode/0010/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}