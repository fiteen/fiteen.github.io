{"title":"手把手教你免费搭建 Shadowsocks 服务","date":"2018-12-27T13:43:02.000Z","date_formatted":{"ll":"Dec 27, 2018","L":"12/27/2018","MM-DD":"12-27"},"thumbnail":"2018/build-a-free-shadowsocks-service/google-cloud.png","link":"2018/build-a-free-shadowsocks-service","comments":true,"tags":["Shadowsocks"],"categories":["科学上网"],"updated":"2022-09-02T06:38:13.683Z","content":"<h2 id=\"一、申请免费试用-gcp\">一、申请免费试用 GCP<a title=\"#一、申请免费试用-gcp\" href=\"#一、申请免费试用-gcp\"></a></h2>\n<p>每位新注册的用户可以在谷歌云平台 <a href=\"https://cloud.google.com/free/\" target=\"_blank\">GCP</a> (Google Cloud Platform)获得第一年$300 的免费赠送额度。一年后若不主动选择继续使用不会扣费的。（如果谷歌云免费到期，你也可以通过<a href=\"https://aws.amazon.com/cn/\" target=\"_blank\">亚马逊 AWS</a>再薅一年羊毛。）</p>\n<span id=\"more\"></span>\n<p>注册账户的准备工作：</p>\n<p>1、可用的 VPN，用于正常访问 GCP；</p>\n<p>2、具有 VISA、MasterCard 等海外支付功能的信用卡一张；</p>\n<p>有账户的可以直接登录，没有的就创建一个。</p>\n<p><img src=\"/2018/build-a-free-shadowsocks-service/create-account.jpg\" alt=\"创建账号\" class=\"φcx\"></p>\n<p>如果阅读英文不习惯，可以将左下方的语言改成简体中文。登录成功后进入 <a href=\"https://console.cloud.google.com/freetrial\" target=\"_blank\">GCP 试用申请</a>：</p>\n<p><strong>第 1 步 - 同意条款</strong>：注意选择国家/地区时避免选择“中国”，因为根据 Google Cloud 的政策，不支持中国使用，直接使用默认的“美国”即可。</p>\n<p><img src=\"/2018/build-a-free-shadowsocks-service/apply-for-a-free-trial.jpg\" alt=\"申请免费试用\" class=\"φcx\"></p>\n<p><strong>第 2 步 - 填写客户信息和付款方式</strong></p>\n<p>客户信息的账户类型选择“个人”，通过<a href=\"http://www.haoweichi.com/Index/random\" target=\"_blank\">虚拟美国人信息生成工具</a>，补充完成“姓名和地址”信息。</p>\n<p><img src=\"/2018/build-a-free-shadowsocks-service/account-information.jpg\" alt=\"客户信息\" class=\"φcx\"></p>\n<p>填写付款方式时，务必填入<strong>正确真实</strong>的信用卡信息，不能再使用生成工具里的虚拟信息。可以取消“信用卡或借记卡账单邮寄地址与上述地址相同”的勾选，输入真实的地址。</p>\n<p><img src=\"/2018/build-a-free-shadowsocks-service/payment-method.jpg\" alt=\"付款方式\" class=\"φcx\"></p>\n<p>申请成功会扣除$1，验证后将返回。至此，试用 GCP 免费申请完成。</p>\n<h2 id=\"二、部署虚拟机\">二、部署虚拟机<a title=\"#二、部署虚拟机\" href=\"#二、部署虚拟机\"></a></h2>\n<h3 id=\"1、修改防火墙\">1、修改防火墙<a title=\"#1、修改防火墙\" href=\"#1、修改防火墙\"></a></h3>\n<p>在菜单中依次点击 【网络】 –&gt;【VPC 网络】 –&gt;<a href=\"https://console.cloud.google.com/networking/firewalls/list\" target=\"_blank\">【防火墙规则】</a>–&gt;【创建防火墙规则】，如下图创建一条入站规则：</p>\n<p><img src=\"/2018/build-a-free-shadowsocks-service/firewall-rules.jpg\" alt=\"防火墙规则\" class=\"φcx\"></p>\n<p>注意点：</p>\n<ul>\n<li>\n<p>目标：网络中的所有实例；如果选择指定标签，需要在后续的配置中输入标签</p>\n</li>\n<li>\n<p>IP 地址范围： 0.0.0.0/0</p>\n</li>\n<li>\n<p>协议和端口：全部允许</p>\n</li>\n</ul>\n<h3 id=\"2、保留静态地址\">2、保留静态地址<a title=\"#2、保留静态地址\" href=\"#2、保留静态地址\"></a></h3>\n<p>在菜单中依次点击 【网络】 –&gt;【VPC 网络】 –&gt;<a href=\"https://console.cloud.google.com/networking/addresses/list\" target=\"_blank\">【外部 IP 地址】</a>–&gt;【保留静态 IP】</p>\n<p><img src=\"/2018/build-a-free-shadowsocks-service/static-ip.jpg\" alt=\"保留静态地址\" class=\"φcx\"></p>\n<p>静态 IP 只能申请一个。区域可以选择亚洲东部、欧洲、美国等地，推荐使用 asia-east1，对应台湾地区，访问速度较快。</p>\n<h3 id=\"3、创建计算引擎\">3、创建计算引擎<a title=\"#3、创建计算引擎\" href=\"#3、创建计算引擎\"></a></h3>\n<p>在菜单中依次点击 【计算】 –&gt;【Compute Engine】 –&gt;<a href=\"https://console.cloud.google.com/networking/addresses/list\" target=\"_blank\">【VM 实例】</a>–&gt;【创建实例】</p>\n<p><img src=\"/2018/build-a-free-shadowsocks-service/create-instance.jpg\" alt=\"创建实例\" class=\"φcx\"></p>\n<p>注意点：</p>\n<ul>\n<li>\n<p>区域：与创建静态地址时一致</p>\n</li>\n<li>\n<p>机器类型：最便宜的“微型”即可</p>\n</li>\n<li>\n<p>启动磁盘：Ubuntu 16.04 LTS Minimal</p>\n</li>\n</ul>\n<p>展开“管理、安全、磁盘、网络、单独租用”，外部 IP 选择第 2 步的静态 IP。到这里，虚拟机部署完成。</p>\n<p><img src=\"/2018/build-a-free-shadowsocks-service/vm-instance.jpg\" alt=\"VM 实例\" class=\"φcx\"></p>\n<h2 id=\"三、搭建-ssr-+-bbr\">三、搭建 SSR + BBR<a title=\"#三、搭建-ssr-+-bbr\" href=\"#三、搭建-ssr-+-bbr\"></a></h2>\n<p>在 VM 实例列表中找到刚才创建好的实例，点击上图红框内的 SSH，会弹出终端，如下图所示。如果用的是谷歌浏览器可以使用 <a href=\"https://chrome.google.com/webstore/detail/ssh-for-google-cloud-plat/ojilllmhjhibplnppnamldakhpmdnibd\" target=\"_blank\">SSH 插件</a></p>\n<p><img src=\"/2018/build-a-free-shadowsocks-service/ssh.jpg\" alt=\"SSH\" class=\"φcx\"></p>\n<ul>\n<li>获得 root 权限</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo -i</span><br></pre></td></tr></table></figure>\n<ul>\n<li>检查内核版本</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">uname</span> –sr</span><br></pre></td></tr></table></figure>\n<p>正常情况下，当前的内核版本都是超过 4.9，无需升级，可以直接进入下一步；如果需要升级，按照以下步骤进行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 更新系统</span><br><span class=\"line\">apt update</span><br><span class=\"line\">apt upgrade</span><br><span class=\"line\">// 安装指定的新内核</span><br><span class=\"line\">apt install linux-image-4.10.0-20</span><br><span class=\"line\">// 卸载旧内核</span><br><span class=\"line\">apt autoremove</span><br><span class=\"line\">// 启用新内核</span><br><span class=\"line\">update-grub</span><br><span class=\"line\">// 重启</span><br><span class=\"line\">reboot</span><br><span class=\"line\">// 获得 root 权限</span><br><span class=\"line\">sudo -i</span><br><span class=\"line\">// 验证内核版本</span><br><span class=\"line\"><span class=\"built_in\">uname</span> –r</span><br></pre></td></tr></table></figure>\n<ul>\n<li>写入配置</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;net.core.default_qdisc=fq&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;net.ipv4.tcp_congestion_control=bbr&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br></pre></td></tr></table></figure>\n<ul>\n<li>配置生效</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sysctl -p</span><br></pre></td></tr></table></figure>\n<ul>\n<li>检验是否开启成功</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsmod | grep bbr</span><br></pre></td></tr></table></figure>\n<p>如果看到回显<code>tcp_bbr 20480 </code>说明已经成功开启 BBR。</p>\n<h2 id=\"四、搭建-shadowsocks-server\">四、搭建 Shadowsocks Server<a title=\"#四、搭建-shadowsocks-server\" href=\"#四、搭建-shadowsocks-server\"></a></h2>\n<ul>\n<li>更新 apt-get 软件包</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n<ul>\n<li>通过 apt-get 安装 python-pip</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install python-pip</span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用 pip 安装 shadowsocks 服务</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo pip install shadowsocks</span><br></pre></td></tr></table></figure>\n<p>如果出现类似 <code>Successfullying installed shadowsocks - x.x.x</code>的提示说明安装成功。</p>\n<ul>\n<li>创建  Shadowsocks Server 配置文件</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vim /etc/ss-conf.json</span><br></pre></td></tr></table></figure>\n<p>回车之后会进入这个创建的文件，windows 下点击键盘上的 insert 键进入编辑，mac 系统则随便输入一个字母可以进入编辑。输入以下内容：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"><span class=\"attr\">&quot;server&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;0.0.0.0&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;server_port&quot;</span><span class=\"punctuation\">:</span><span class=\"number\">8838</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;local_address&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;127.0.0.1&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;local_port&quot;</span><span class=\"punctuation\">:</span><span class=\"number\">1080</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;password&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;fiteen&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;timeout&quot;</span><span class=\"punctuation\">:</span><span class=\"number\">600</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;method&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;aes-256-cfb&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// server_port 与 password 分别对应 Shadowsocks 客户端上配置使用的端口和密码，内容请自定义</span></span><br></pre></td></tr></table></figure>\n<p>点击 ESC 键，左下角的 insert 标志消失，同时按下&quot;shift&quot; 和&quot;:“键，左下角出现”:&quot; 标志，输入&quot;wq&quot;，接着回车即保存退出文件。</p>\n<ul>\n<li>用配置文件启动 Shadowsocks Server</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ssserver -c /etc/ss-conf.json -d start</span><br></pre></td></tr></table></figure>\n<p>如果要设置开机启动，可以参考这篇<a href=\"https://my.oschina.net/oncereply/blog/467349\" target=\"_blank\">文章</a>。</p>\n<p>服务搭建已经完成了，在 <a href=\"https://github.com/shadowsocks/ShadowsocksX-NG/releases\" target=\"_blank\">SSR（Mac 端）</a>上输入上面配置的内容，确定后开启服务便可以科学上网了。</p>\n<p><img src=\"/2018/build-a-free-shadowsocks-service/server-settings.png\" alt=\"服务器设定\" class=\"φcx\"></p>\n<p>如果你的 iPhone 客户端也需要下载小火箭，可以用美区账号 App Store 购买/ TB 购买礼品卡，如果不想花钱，可以尝试一下<a href=\"https://github.com/v2ss/shadowrocket\" target=\"_blank\">这个方案</a>。（2019-12-31 更新）</p>\n","prev":{"title":"『2018』勿忘初心","link":"2018/annual-summary-2018"},"next":{"title":"在 Mac 上为 Git 和终端设置代理","link":"2018/set-up-sock5-or-http-proxy-for-git-on-mac"},"plink":"https://blog.fiteen.top/2018/build-a-free-shadowsocks-service/","toc":[{"id":"一、申请免费试用-gcp","title":"一、申请免费试用 GCP","index":"1"},{"id":"二、部署虚拟机","title":"二、部署虚拟机","index":"2"},{"id":"三、搭建-ssr-+-bbr","title":"三、搭建 SSR + BBR","index":"3"},{"id":"四、搭建-shadowsocks-server","title":"四、搭建 Shadowsocks Server","index":"4"}],"reward":true,"copyright":{"author":"FiTeen","link":"<a href=\"https://blog.fiteen.top/2018/build-a-free-shadowsocks-service/\" title=\"手把手教你免费搭建 Shadowsocks 服务\">https://blog.fiteen.top/2018/build-a-free-shadowsocks-service/</a>","license":"Attribution-NonCommercial-NoDerivatives 4.0 International (<a href=\"https://creativecommons.org/licenses/by-nc-sa/4.0/\" rel=\"external nofollow noopener\" target=\"_blank\">CC BY-NC-ND 4.0</a>)"}}